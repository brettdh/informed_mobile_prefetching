/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.umich.eac;

import edu.umich.eac.CacheFetcher;
import android.util.Log;

public class JNICacheFetcher extends CacheFetcher<SWIGTYPE_p_void> {
  private int swigCPtr;
  protected boolean swigCMemOwn;

  private final static String TAG = JNICacheFetcher.class.getName();

  protected JNICacheFetcher(int cPtr, boolean cMemoryOwn) {
      Log.d(TAG, "Created JNICacheFetcher; cPtr = "
            + Integer.toHexString(cPtr));
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static int getCPtr(JNICacheFetcher obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      eacJNI.delete_JNICacheFetcher(swigCPtr);
    }
    swigCPtr = 0;
  }

  public SWIGTYPE_p_void call(int labels) {
    if (swigCPtr == 0) {
        throw new RuntimeException("ERROR: JNICacheFetcher.call() would segfault");
    }
    int cPtr = eacJNI.JNICacheFetcher_call(swigCPtr, this, labels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }
  
  public int bytesToTransfer() {
    return eacJNI.JNICacheFetcher_bytesToTransfer(swigCPtr, this);
  }
  
  public double estimateFetchTime(int worstBandwidthDown,
                                  int worstBandwidthUp,
                                  int worstRTT) {
      return eacJNI.JNICacheFetcher_estimateFetchTime(swigCPtr, this,
                                                      worstBandwidthDown,
                                                      worstBandwidthUp,
                                                      worstRTT);
    }
}
